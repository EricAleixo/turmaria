<div class="drawer lg:drawer-open bg-gray-100">
  <input id="my-drawer" type="checkbox" class="drawer-toggle" />

  <div class="drawer-content flex flex-col items-center">
    
    <div class="w-full p-4">
      <div class="flex items-center mb-6 lg:hidden">
        <label for="my-drawer" class="btn btn-square btn-ghost">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-6 h-6 stroke-current"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>
        </label>
        <h1 class="text-xl font-bold ml-2">Alocar Alunos</h1>
      </div>

      <main class="w-full max-w-6xl mx-auto">
        <!-- Breadcrumb -->
        <div class="text-sm breadcrumbs mb-4">
          <ul>
            <li><%= link_to "Escolas", escolas_path, class: "text-blue-600 hover:text-blue-800" %></li>
            <li><%= link_to @escola.nome, escola_path(@escola), class: "text-blue-600 hover:text-blue-800" %></li>
            <li><%= link_to @turma.nome, escola_turma_path(@escola, @turma), class: "text-blue-600 hover:text-blue-800" %></li>
            <li class="text-gray-500">Alocar Alunos</li>
          </ul>
        </div>

        <div class="bg-white p-8 rounded-lg shadow-md mb-6">
          <div class="flex justify-between items-center mb-8 border-b pb-4">
            <div>
              <h1 class="text-2xl font-bold text-gray-700">Alocar Alunos para <%= @turma.nome %></h1>
              <p class="text-gray-600"><%= @turma.serie %>º ano - <%= @turma.turno.humanize %></p>
            </div>
            <%= link_to "Voltar", escola_turma_path(@escola, @turma), class: "btn btn-ghost" %>
          </div>

          <div class="space-y-8">
            <!-- Alunos Já Alocados nesta Turma -->
            <div>
              <h2 class="text-xl font-semibold text-gray-700 mb-4">
                Alunos Alocados 
                <span class="badge bg-green-100 text-green-800"><%= @allocated_alunos.count %></span>
              </h2>
              
              <% if @allocated_alunos.any? %>
                <div class="overflow-x-auto relative">
                  <table class="table w-full">
                    <thead class="sticky top-0 bg-base-200 z-10">
                      <tr class="bg-base-200">
                        <th class="w-12">
                          <label>
                            <input type="checkbox" class="checkbox checkbox-primary" id="select-all-allocated" />
                          </label>
                        </th>
                        <th class="text-left">Aluno</th>
                        <th class="text-center">Data de Nascimento</th>
                        <th class="text-center w-24">Ações</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% @allocated_alunos.each do |aluno| %>
                        <tr class="hover:bg-base-100 transition-colors">
                          <td>
                            <label>
                              <input type="checkbox" class="checkbox checkbox-primary allocated-checkbox" data-student-id="<%= aluno.id %>" />
                            </label>
                          </td>
                          <td>
                            <div class="flex items-center gap-3">
                              <div class="avatar">
                                <div class="w-10 h-10 rounded-full bg-gradient-to-br from-green-400 to-green-600 flex items-center justify-center">
                                  <span class="text-white font-bold text-sm flex items-center justify-center w-full h-full"><%= aluno.nome.first.upcase %></span>
                                </div>
                              </div>
                              <div>
                                <div class="font-semibold text-gray-900"><%= aluno.nome %></div>
                                <div class="text-sm text-green-600 font-medium">● Alocado</div>
                              </div>
                            </div>
                          </td>
                          <td class="text-center">
                            <div class="badge badge-outline badge-sm">
                              <%= aluno.data_nascimento&.strftime("%d/%m/%Y") || "Não informada" %>
                            </div>
                          </td>
                          <td class="text-center">
                            <button type="button" 
                                class="btn btn-sm btn-circle btn-ghost text-red-600 hover:text-white hover:bg-red-500 transition-all remove-student-btn"
                                title="Remover <%= aluno.nome %>"
                                data-student-id="<%= aluno.id %>"
                                data-student-name="<%= aluno.nome %>">
                              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-4 h-4">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                              </svg>
                            </button>
                          </td>
                        </tr>
                      <% end %>
                    </tbody>
                    <tfoot class="sticky bottom-0 bg-white z-10">
                      <tr>
                        <td colspan="4" class="p-0">
                          <!-- Bulk Remove Actions -->
                          <div id="bulk-remove-section" class="flex justify-between items-center p-4 bg-gradient-to-r from-red-50 to-orange-50 rounded-lg border border-red-200 transition-all duration-300 hidden opacity-0 scale-95">
                            <div class="flex items-center gap-2">
                              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-red-600">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.552.236 3.374 1.948 3.374h14.71c1.713 0 2.814-1.822 1.948-3.374L13.949 3.378c-.866-1.552-3.032-1.552-3.898 0L1.697 16.126zM12 15.75h.007v.008H12v-.008z" />
                              </svg>
                              <span class="text-sm font-medium text-gray-700">
                                <span id="allocated-count" class="font-bold text-red-600">0</span> aluno(s) selecionado(s)
                              </span>
                            </div>
                            <button type="button" id="bulk-remove-btn" class="btn btn-error btn-sm gap-2">
                              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M22 10.5h-6m-2.25-4.125a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zM4 19.235v-.11a6.375 6.375 0 0112.75 0v.109A12.318 12.318 0 016.374 21c-2.331 0-4.512-.645-6.374-1.766z" />
                              </svg>
                              Remover Selecionados
                            </button>
                          </div>
                        </td>
                      </tr>
                    </tfoot>
                  </table>
                </div>
              <% else %>
                <div class="text-center py-8">
                  <svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                  </svg>
                  <h3 class="text-lg font-medium text-gray-500 mt-2">Nenhum aluno alocado</h3>
                  <p class="text-gray-400">Esta turma ainda não possui alunos</p>
                </div>
              <% end %>
            </div>

            <!-- Alunos Não Alocados -->
            <div>
              <h2 class="text-xl font-semibold text-gray-700 mb-4">
                Alunos Disponíveis 
                <span class="badge bg-blue-100 text-blue-800"><%= @unallocated_alunos.count %></span>
              </h2>
              
              <% if @unallocated_alunos.any? %>
                <div class="overflow-x-auto max-h-96 relative">
                  <table class="table w-full">
                    <thead class="sticky top-0 bg-base-200 z-10">
                      <tr class="bg-base-200">
                        <th class="w-12">
                          <label>
                            <input type="checkbox" class="checkbox checkbox-primary" id="select-all-available" />
                          </label>
                        </th>
                        <th class="text-left">Aluno</th>
                        <th class="text-center">Data de Nascimento</th>
                        <th class="text-center w-24">Ações</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% @unallocated_alunos.each do |aluno| %>
                        <tr class="hover:bg-base-100 transition-colors">
                          <td>
                            <label>
                              <input type="checkbox" class="checkbox checkbox-primary student-checkbox" data-student-id="<%= aluno.id %>" />
                            </label>
                          </td>
                          <td>
                            <div class="flex items-center gap-3">
                              <div class="avatar">
                                <div class="w-10 h-10 rounded-full bg-gradient-to-br from-blue-400 to-blue-600 flex items-center justify-center">
                                  <span class="text-white font-bold text-sm flex items-center justify-center w-full h-full"><%= aluno.nome.first.upcase %></span>
                                </div>
                              </div>
                              <div>
                                <div class="font-semibold text-gray-900"><%= aluno.nome %></div>
                                <div class="text-sm text-green-600 font-medium">● Disponível</div>
                              </div>
                            </div>
                          </td>
                          <td class="text-center">
                            <div class="badge badge-outline badge-sm">
                              <%= aluno.data_nascimento&.strftime("%d/%m/%Y") || "Não informada" %>
                            </div>
                          </td>
                          <td class="text-center">
                            <%= button_to assign_student_escola_turma_path(@escola, @turma), 
                                params: { aluno_id: aluno.id },
                                method: :patch,
                                class: "btn btn-sm btn-circle btn-ghost text-green-600 hover:text-white hover:bg-green-500 transition-all",
                                title: "Alocar #{aluno.nome}",
                                data: { turbo_confirm: "Alocar #{aluno.nome} para esta turma?" } do %>
                              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-4 h-4">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
                              </svg>
                            <% end %>
                          </td>
                        </tr>
                      <% end %>
                    </tbody>
                    <tfoot class="sticky bottom-0 bg-white z-10">
                      <tr>
                        <td colspan="4" class="p-0">
                          <!-- Bulk Actions -->
                          <div id="bulk-assign-section" class="flex justify-between items-center p-4 bg-gradient-to-r from-blue-50 to-green-50 rounded-lg border border-blue-200 transition-all duration-300 hidden opacity-0 scale-95">
                            <div class="flex items-center gap-2">
                              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-blue-600">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                              </svg>
                              <span class="text-sm font-medium text-gray-700">
                                <span id="selected-count" class="font-bold text-blue-600">0</span> aluno(s) selecionado(s)
                              </span>
                            </div>
                            <%= form_tag assign_students_escola_turma_path(@escola, @turma), method: :patch, id: 'bulk-assign-form' do %>
                              <div id="selected-students-inputs"></div>
                              <button type="submit" id="bulk-assign-btn" class="btn btn-primary btn-sm gap-2">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                                  <path stroke-linecap="round" stroke-linejoin="round" d="M18 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zM3 19.235v-.11a6.375 6.375 0 0112.75 0v.109A12.318 12.318 0 016.374 21c-2.331 0-4.512-.645-6.374-1.766z" />
                                </svg>
                                Alocar Selecionados
                              </button>
                            <% end %>
                          </div>
                        </td>
                      </tr>
                    </tfoot>
                  </table>
                </div>
              <% else %>
                <div class="text-center py-8">
                  <svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                  </svg>
                  <h3 class="text-lg font-medium text-gray-500 mt-2">Nenhum aluno disponível</h3>
                  <p class="text-gray-400">Todos os alunos já estão alocados em turmas</p>
                </div>
              <% end %>
            </div>
          </div>
        </div>
      </main>
    </div>
  </div>

  <!-- Sidebar -->
  <aside class="drawer-side">
    <label for="my-drawer" aria-label="close sidebar" class="drawer-overlay"></label>

    <div class="menu p-4 w-72 min-h-full bg-white text-base-content">
      <h1 class="text-2xl font-bold mb-8 px-4">
        Dashboard
      </h1>
      
      <ul>
        <li class="mb-2">
          <%= link_to escolas_path, class: "block p-3 rounded-lg hover:bg-gray-100" do %>
            <div class="flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-3">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 21v-8.25M15.75 21v-8.25M8.25 21v-8.25M3 9l9-6 9 6m-1.5 12V10.332A48.36 48.36 0 0112 9.75c-2.551 0-5.056-.2-7.5-.582V21M3 21h18M12 6.75h.008v.008H12V6.75z" />
              </svg>
              Escolas
            </div>
          <% end %>
        </li>
      </ul>
    </div>
  </aside>
</div>

<script data-turbo-permanent>
function initializeAssignStudents() {
  const selectAllCheckbox = document.getElementById('select-all-available');
  const studentCheckboxes = document.querySelectorAll('.student-checkbox');
  const selectedCountSpan = document.getElementById('selected-count');
  const bulkAssignBtn = document.getElementById('bulk-assign-btn');
  const bulkAssignForm = document.getElementById('bulk-assign-form');
  const selectedStudentsInputs = document.getElementById('selected-students-inputs');
  const bulkAssignSection = document.getElementById('bulk-assign-section');

  selectAllCheckbox?.addEventListener('change', function() {
    studentCheckboxes.forEach(checkbox => {
      checkbox.checked = this.checked;
    });
    updateSelectedCount();
  });

  studentCheckboxes.forEach(checkbox => {
    checkbox.addEventListener('change', function() {
      updateSelectAllState();
      updateSelectedCount();
    });
  });

  function updateSelectAllState() {
    const checkedBoxes = document.querySelectorAll('.student-checkbox:checked');
    if (checkedBoxes.length === 0) {
      selectAllCheckbox.indeterminate = false;
      selectAllCheckbox.checked = false;
    } else if (checkedBoxes.length === studentCheckboxes.length) {
      selectAllCheckbox.indeterminate = false;
      selectAllCheckbox.checked = true;
    } else {
      selectAllCheckbox.indeterminate = true;
      selectAllCheckbox.checked = false;
    }
  }

  function updateSelectedCount() {
    const checkedBoxes = document.querySelectorAll('.student-checkbox:checked');
    const count = checkedBoxes.length;
    
    selectedCountSpan.textContent = count;
    
    if (count > 0) {
      bulkAssignBtn.classList.remove('btn-disabled');
      bulkAssignSection.classList.remove('hidden');
      setTimeout(() => {
        bulkAssignSection.classList.remove('opacity-0', 'scale-95');
        bulkAssignSection.classList.add('opacity-100', 'scale-100');
      }, 10);
    } else {
      bulkAssignBtn.classList.add('btn-disabled');
      bulkAssignSection.classList.remove('opacity-100', 'scale-100');
      bulkAssignSection.classList.add('opacity-0', 'scale-95');
      setTimeout(() => {
        bulkAssignSection.classList.add('hidden');
      }, 300);
    }
  }

  bulkAssignBtn?.addEventListener('click', function(e) {
    e.preventDefault();
    
    const checkedBoxes = document.querySelectorAll('.student-checkbox:checked');
    const studentIds = Array.from(checkedBoxes).map(cb => cb.dataset.studentId);
    
    if (studentIds.length === 0) {
      return;
    }
    
    const confirmMessage = `Alocar ${studentIds.length} aluno(s) para esta turma?`;
    
    if (confirm(confirmMessage)) {
      selectedStudentsInputs.innerHTML = '';
      
      studentIds.forEach((id, index) => {
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'student_ids[]';
        input.value = id;
        selectedStudentsInputs.appendChild(input);
      });
      
      bulkAssignForm.submit();
    }
  });

  const selectAllAllocatedCheckbox = document.getElementById('select-all-allocated');
  const allocatedCheckboxes = document.querySelectorAll('.allocated-checkbox');
  const allocatedCountSpan = document.getElementById('allocated-count');
  const bulkRemoveBtn = document.getElementById('bulk-remove-btn');
  const bulkRemoveForm = document.getElementById('bulk-remove-form');
  const allocatedStudentsInputs = document.getElementById('allocated-students-inputs');

  selectAllAllocatedCheckbox?.addEventListener('change', function() {
    allocatedCheckboxes.forEach(checkbox => {
      checkbox.checked = this.checked;
    });
    updateAllocatedCount();
  });

  allocatedCheckboxes.forEach(checkbox => {
    checkbox.addEventListener('change', function() {
      updateSelectAllAllocatedState();
      updateAllocatedCount();
    });
  });

  function updateSelectAllAllocatedState() {
    const checkedBoxes = document.querySelectorAll('.allocated-checkbox:checked');
    if (checkedBoxes.length === 0) {
      selectAllAllocatedCheckbox.indeterminate = false;
      selectAllAllocatedCheckbox.checked = false;
    } else if (checkedBoxes.length === allocatedCheckboxes.length) {
      selectAllAllocatedCheckbox.indeterminate = false;
      selectAllAllocatedCheckbox.checked = true;
    } else {
      selectAllAllocatedCheckbox.indeterminate = true;
      selectAllAllocatedCheckbox.checked = false;
    }
  }

  function updateAllocatedCount() {
    const checkedBoxes = document.querySelectorAll('.allocated-checkbox:checked');
    const count = checkedBoxes.length;
    const bulkRemoveSection = document.getElementById('bulk-remove-section');
    
    allocatedCountSpan.textContent = count;
    
    if (count > 0) {
      bulkRemoveSection.classList.remove('hidden');
      setTimeout(() => {
        bulkRemoveSection.classList.remove('opacity-0', 'scale-95');
        bulkRemoveSection.classList.add('opacity-100', 'scale-100');
      }, 10);
    } else {
      bulkRemoveSection.classList.remove('opacity-100', 'scale-100');
      bulkRemoveSection.classList.add('opacity-0', 'scale-95');
      setTimeout(() => {
        bulkRemoveSection.classList.add('hidden');
      }, 300);
    }
  }

  bulkRemoveBtn?.addEventListener('click', function(e) {
    e.preventDefault();
    
    const checkedBoxes = document.querySelectorAll('.allocated-checkbox:checked');
    const studentIds = Array.from(checkedBoxes).map(cb => cb.dataset.studentId);
    
    if (studentIds.length === 0) {
      return;
    }
    
    const confirmMessage = `Remover ${studentIds.length} aluno(s) desta turma?`;
    
    if (confirm(confirmMessage)) {
      studentIds.forEach((studentId, index) => {
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = `/escolas/<%= @escola.id %>/turmas/<%= @turma.id %>/remove_from_turma/${studentId}`;
        form.style.display = 'none';
        
        const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
        const csrfInput = document.createElement('input');
        csrfInput.type = 'hidden';
        csrfInput.name = 'authenticity_token';
        csrfInput.value = csrfToken;
        form.appendChild(csrfInput);
        
        const methodInput = document.createElement('input');
        methodInput.type = 'hidden';
        methodInput.name = '_method';
        methodInput.value = 'patch';
        form.appendChild(methodInput);
        
        document.body.appendChild(form);
        
        if (index === studentIds.length - 1) {
          form.submit();
        } else {
          fetch(form.action, {
            method: 'PATCH',
            headers: {
              'X-CSRF-Token': csrfToken,
              'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams(new FormData(form))
          });
        }
        
        document.body.removeChild(form);
      });
    }
  });

  const removeStudentBtns = document.querySelectorAll('.remove-student-btn');

  removeStudentBtns.forEach(btn => {
    btn.addEventListener('click', function(e) {
      e.preventDefault();
      
      const studentId = this.dataset.studentId;
      const studentName = this.dataset.studentName;
      
      const confirmMessage = `Remover ${studentName} desta turma?`;
      
      if (confirm(confirmMessage)) {
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = `/escolas/<%= @escola.id %>/turmas/<%= @turma.id %>/remove_from_turma/${studentId}`;
        form.style.display = 'none';
        
        const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
        const csrfInput = document.createElement('input');
        csrfInput.type = 'hidden';
        csrfInput.name = 'authenticity_token';
        csrfInput.value = csrfToken;
        form.appendChild(csrfInput);
        
        const methodInput = document.createElement('input');
        methodInput.type = 'hidden';
        methodInput.name = '_method';
        methodInput.value = 'patch';
        form.appendChild(methodInput);
        
        document.body.appendChild(form);
        form.submit();
      }
    });
  });
}

document.addEventListener('DOMContentLoaded', initializeAssignStudents);
document.addEventListener('turbo:load', initializeAssignStudents);
</script>
